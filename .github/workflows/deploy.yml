name: Deploy to VPS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      OPENAI_MAX_TOKENS: "4096"
      OPENAI_TOOL_CHOICE: "auto"
      LUNCH_TIME: "13:45"
      BRIEF_TIME: "11:45"
      BLOCKCHAIN_API: "https://api.blockchain.info/stats"
      ENABLE_WEB_SEARCH: "true"
      LOG_LEVEL: "debug"
      TASKS_FILE: "tasks.yml"
      TASKS_JSON: ""
      WHITELIST_FILE: ""
      DOCKERHUB_USER: "rusdevs"

    steps:
      - uses: actions/checkout@v4

      - name: Mask dynamic secrets
        shell: bash
        run: |
          for s in TELEGRAM_TOKEN OPENAI_API_KEY CHAT_ID LOG_CHAT_ID OPENAI_MODEL; do
            echo "::add-mask::${{ secrets[$s] }}"
          done

      - name: Build .env from secrets
        shell: bash
        run: |
          cat > .env <<EOF_ENV
          TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          CHAT_ID=${{ secrets.CHAT_ID }}
          LOG_CHAT_ID=${{ secrets.LOG_CHAT_ID }}
          OPENAI_MODEL=${{ secrets.OPENAI_MODEL }}
          OPENAI_MAX_TOKENS=${OPENAI_MAX_TOKENS}
          OPENAI_TOOL_CHOICE=${OPENAI_TOOL_CHOICE}
          LUNCH_TIME=${LUNCH_TIME}
          BRIEF_TIME=${BRIEF_TIME}
          BLOCKCHAIN_API=${BLOCKCHAIN_API}
          ENABLE_WEB_SEARCH=${ENABLE_WEB_SEARCH}
          LOG_LEVEL=${LOG_LEVEL}
          TASKS_FILE=${TASKS_FILE}
          TASKS_JSON=${TASKS_JSON}
          WHITELIST_FILE=${WHITELIST_FILE}
          DOCKERHUB_USER=${DOCKERHUB_USER}
          EOF_ENV

      - name: Copy project to server via SCP
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./"
          target: "/opt/telegram-reminder"

      - name: Run deploy script remotely
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /opt/telegram-reminder
            chmod +x generate_env.sh
            ./generate_env.sh
            docker inspect --format '{{range .Config.Env}}{{println .}}{{end}}' telegram-reminder | grep TELEGRAM_TOKEN
            docker inspect --format '{{if .State.Health}}{{.State.Health.Status}}{{end}}' telegram-reminder | grep healthy

